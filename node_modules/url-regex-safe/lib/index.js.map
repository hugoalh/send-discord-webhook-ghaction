{"version":3,"file":"index.js","names":["ipRegex","require","tlds","ipv4","v4","source","ipv6","v6","host","domain","strictTld","defaultTlds","sort","a","b","length","join","port","RE2","hasRE2","module","exports","options","re2","exact","strict","auth","localhost","parens","apostrophes","trailingPeriod","returnString","SafeRegExp","RegExp","protocol","tld","disallowedChars","path","regex"],"sources":["../src/index.js"],"sourcesContent":["const ipRegex = require('ip-regex');\nconst tlds = require('tlds');\n\nconst ipv4 = ipRegex.v4().source;\nconst ipv6 = ipRegex.v6().source;\nconst host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\nconst domain = '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\nconst strictTld = '(?:[a-z\\\\u00a1-\\\\uffff]{2,})';\nconst defaultTlds = `(?:${tlds.sort((a, b) => b.length - a.length).join('|')})`;\nconst port = '(?::\\\\d{2,5})?';\n\nlet RE2;\nlet hasRE2;\n\nmodule.exports = (options) => {\n  options = {\n    //\n    // attempt to use re2, if set to false will use RegExp\n    // (we did this approach because we don't want to load in-memory re2 if users don't want it)\n    // <https://github.com/spamscanner/url-regex-safe/issues/28>\n    //\n    re2: true,\n    exact: false,\n    strict: false,\n    auth: false,\n    localhost: true,\n    parens: false,\n    apostrophes: false,\n    trailingPeriod: false,\n    ipv4: true,\n    ipv6: true,\n    returnString: false,\n    ...options\n  };\n\n  /* istanbul ignore next */\n  const SafeRegExp =\n    options.re2 && hasRE2 !== false\n      ? (() => {\n          if (typeof RE2 === 'function') return RE2;\n          try {\n            RE2 = require('re2');\n            return typeof RE2 === 'function' ? RE2 : RegExp;\n          } catch {\n            hasRE2 = false;\n            return RegExp;\n          }\n        })()\n      : RegExp;\n\n  const protocol = `(?:(?:[a-z]+:)?//)${options.strict ? '' : '?'}`;\n\n  // Add option to disable matching urls with HTTP Basic Authentication\n  // <https://github.com/kevva/url-regex/pull/63>\n  const auth = options.auth ? '(?:\\\\S+(?::\\\\S*)?@)?' : '';\n\n  // Add ability to pass custom list of tlds\n  // <https://github.com/kevva/url-regex/pull/66>\n  const tld = `(?:\\\\.${\n    options.strict\n      ? strictTld\n      : options.tlds\n      ? `(?:${options.tlds.sort((a, b) => b.length - a.length).join('|')})`\n      : defaultTlds\n  })${options.trailingPeriod ? '\\\\.?' : ''}`;\n\n  let disallowedChars = '\\\\s\"';\n  if (!options.parens) {\n    // Not accept closing parenthesis\n    // <https://github.com/kevva/url-regex/pull/35>\n    disallowedChars += '\\\\)';\n  }\n\n  if (!options.apostrophes) {\n    // Don't allow apostrophes\n    // <https://github.com/kevva/url-regex/pull/55>\n    disallowedChars += \"'\";\n  }\n\n  const path = options.trailingPeriod\n    ? `(?:[/?#][^${disallowedChars}]*)?`\n    : `(?:(?:[/?#][^${disallowedChars}]*[^${disallowedChars}.?!])|[/])?`;\n\n  // Added IPv6 support\n  // <https://github.com/kevva/url-regex/issues/60>\n  let regex = `(?:${protocol}|www\\\\.)${auth}(?:`;\n  if (options.localhost) regex += 'localhost|';\n  if (options.ipv4) regex += `${ipv4}|`;\n  if (options.ipv6) regex += `${ipv6}|`;\n  regex += `${host}${domain}${tld})${port}${path}`;\n\n  // Add option to return the regex string instead of a RegExp\n  if (options.returnString) return regex;\n\n  return options.exact\n    ? new SafeRegExp(`(?:^${regex}$)`, 'i')\n    : new SafeRegExp(regex, 'ig');\n};\n"],"mappings":"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"}