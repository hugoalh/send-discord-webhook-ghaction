# $<Schema>$ https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: "Publish - GitHub Packages - Docker"
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "{string} Tag."
        required: true
      latest:
        description: "{boolean} Latest."
        required: false
        default: "false"
env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "${{github.repository}}"
jobs:
  publish-ghp-docker:
    name: "Publish - GitHub Packages - Docker"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v2.4.0"
      - name: "Sign In To Registry ${{env.REGISTRY}}"
        uses: "docker/login-action@v1.12.0"
        with:
          registry: "${{env.REGISTRY}}"
          username: "${{github.actor}}"
          password: "${{github.token}}"
      - name: "Generate Docker Metadata"
        id: "docker-meta"
        uses: "docker/metadata-action@v3.6.2"
        with:
          images: "${{env.REGISTRY}}/${{env.IMAGE_NAME}}"
          tags: |
            type=raw,enable=${{github.event.inputs.tag != ''}},value=${{github.event.inputs.tag}}
            type=raw,enable=${{github.event.inputs.latest == 'true'}},value=latest
            type=semver,enable=${{github.event.inputs.tag == ''}},pattern={{version}}
            type=semver,enable=${{github.event.inputs.tag == ''}},pattern={{major}}.{{minor}}.{{patch}}
            type=semver,enable=${{github.event.inputs.tag == ''}},pattern={{major}}.{{minor}}
            type=semver,enable=${{github.event.inputs.tag == ''}},pattern={{major}}
          labels: |
            org.opencontainers.image.authors=hugoalh
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.title=Send Discord Webhook (GitHub Action) Image
            org.opencontainers.image.description=A Docker image for Send Discord Webhook (GitHub Action) to send a Discord webhook.
      - name: "Build & Push Docker Image"
        uses: "docker/build-push-action@v2.8.0"
        with:
          context: "./"
          file: "Dockerfile"
          labels: "${{steps.docker-meta.outputs.labels}}"
          platforms: |
            linux/amd64
          pull: "true"
          push: "true"
          tags: "${{steps.docker-meta.outputs.tags}}"
